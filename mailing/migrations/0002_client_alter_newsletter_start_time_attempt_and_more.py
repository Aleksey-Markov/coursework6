# Generated by Django 4.2 on 2024-07-10 12:49

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('mailing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Адрес электронной почты')),
                ('name', models.CharField(max_length=100, verbose_name='Имя клиента')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий клиента')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.AlterField(
            model_name='newsletter',
            name='start_time',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='начало рассылки'),
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_attempt_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата последней попытки')),
                ('attempt_status', models.BooleanField(default=False, verbose_name='статус')),
                ('attempt_response', models.CharField(blank=True, max_length=250, null=True, verbose_name='ответ почтового сервиса')),
                ('newsletter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mailing.newsletter', verbose_name='Рассылка')),
            ],
            options={
                'verbose_name': 'Попытка отправки рассылки',
                'verbose_name_plural': 'Попытки отправки рассылки',
            },
        ),
        migrations.AddField(
            model_name='newsletter',
            name='client',
            field=models.ManyToManyField(to='mailing.client', verbose_name='Клиент'),
        ),
    ]
